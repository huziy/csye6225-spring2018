{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "ApplicationStack",
	"Resources": {
		"MyEC2Instance": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": "ami-66506c1c",
				"InstanceType": "t2.micro",
				"KeyName": "YLI",
				"SubnetId": {
					"Ref": "SubnetId"
				},
				"SecurityGroupIds": [{
					"Ref": "WebPolicy"
				}],
				"DisableApiTermination": "false",
				"IamInstanceProfile": {
					"Ref": "ec2instanceprofile"
				},
				"InstanceInitiatedShutdownBehavior": "stop",
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"", [
								"#!/bin/bash -xe\n",
								"sudo apt-get update\n",
								"sudo apt-get install openjdk-8-jdk -y\n",
								"sudo apt-get install ruby -y\n",
								"sudo apt-get install wget -y\n",
								"sudo apt-get install python -y\n",
								"sudo apt-get update\n",
								"sudo wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install\n",
								"sudo chmod +x ./install\n",
								"sudo ./install auto\n",
								"sudo service codedeploy-agent start\n",
								"sudo apt-get install tomcat8 -y\n",
								"sudo mkdir /var/tempimage\n",
								"sudo chown -R tomcat8 /var/tempimage\n",
								"sudo echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dspring.datasource.username=csye6225master -Dspring.datasource.password=csye6225password  -Dspring.profiles.active=aws\\\"\" >> /etc/default/tomcat8\n",
								{
									"Fn::Join": [
										"", [
											"echo 'JAVA_OPTS=\"${JAVA_OPTS} -Dspring.datasource.url=\\\"jdbc:mysql://",
											{
												"Fn::GetAtt": [
													"MyDB",
													"Endpoint.Address"
												]
											},
											":3306/csye6225\\\"\"' >> /etc/default/tomcat8\n"
										]
									]
								},
								"sudo service tomcat8 restart\n",
								"sudo apt-get update\n",
								"sudo touch /tmp/awslogs.conf\n",
								"sudo echo '[general]' > /tmp/awslogs.conf\n",
								"sudo echo 'state_file= /var/awslogs/agent-state' >> /tmp/awslogs.conf\n",
								"sudo echo '[logstream1]' >> /tmp/awslogs.conf\n",
								"sudo echo 'file = /var/log/tomcat8/csye6225-aws.log' >> /tmp/awslogs.conf\n",
								"sudo echo 'log_group_name = csye6225-webapp' >> /tmp/awslogs.conf\n",
								"sudo echo 'log_stream_name = csye6225-webapp' >> /tmp/awslogs.conf\n",
								"sudo echo 'datetime_format = %d/%b/%Y:%H:%M:%S' >> /tmp/awslogs.conf\n",
								"curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O\n",
								{
									"Fn::Join": [
										" ", [
											"sudo python ./awslogs-agent-setup.py -n -r",
											{
												"Ref": "AWS::Region"
											},
											"-c /tmp/awslogs.conf || error_exit 'Failed to run CloudWatch Logs agent setup'\n"
										]
									]
								},
								"cd /etc/systemd/system\n",
								"sudo touch awslogs.service\n",
								"sudo echo '[Unit]' >> awslogs.service\n",
								"sudo echo 'Description=Service for CloudWatch Logs agent' >> awslogs.service\n",
								"sudo echo 'After=rc-local.service' >> awslogs.service\n",
								"sudo echo '[Service]' >> awslogs.service\n",
								"sudo echo 'Type=simple' >> awslogs.service\n",
								"sudo echo 'Restart=always' >> awslogs.service\n",
								"sudo echo 'KillMode=process' >> awslogs.service\n",
								"sudo echo 'TimeoutSec=infinity' >> awslogs.service\n",
								"sudo echo 'PIDFile=/var/awslogs/state/awslogs.pid' >> awslogs.service\n",
								"sudo echo 'ExecStart=/var/awslogs/bin/awslogs-agent-launcher.sh --start --background --pidfile $PIDFILE --user awslogs --chuid awslogs &amp;' >> awslogs.service\n",
								"sudo echo '[Install]' >> awslogs.service\n",
								"sudo echo 'WantedBy=multi-user.target' >> awslogs.service\n",
								"sudo systemctl start awslogs.service\n",
								"sudo systemctl enable awslogs.service\n"
							]
						]
					}
				},
				"BlockDeviceMappings": [{
					"DeviceName": "/dev/sda1",
					"Ebs": {
						"VolumeType": "gp2",
						"DeleteOnTermination": "false",
						"VolumeSize": "16"
					}
				}],
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Ref": "InstanceName"
						}
					},
					{
						"Key": "deploy",
						"Value": "deploy"
					}
				]
			}
		},

		"ec2instanceprofile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": ["CodeDeployEC2ServiceRole"],
				"InstanceProfileName": "ec2profile"
			}
		},

		"myDynamoDBTable": {
			"Type": "AWS::DynamoDB::Table",
			"Properties": {
				"AttributeDefinitions": [{
					"AttributeName": "id",
					"AttributeType": "S"
				}],
				"KeySchema": [{
					"AttributeName": "id",
					"KeyType": "HASH"
				}],
				"ProvisionedThroughput": {
					"ReadCapacityUnits": "5",
					"WriteCapacityUnits": "5"
				},
				"TableName": "csye6225",
				"TimeToLiveSpecification": {
					"AttributeName": "ttl",
					"Enabled": "true"
				}
			}
		},
		"RecordServiceS3Bucket": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketName": "s3.csye6225-spring2018-liyuan.me"
			}
		},

		"MyDB": {
			"Type": "AWS::RDS::DBInstance",
			"Properties": {
				"DBName": "csye6225",
				"Engine": "MySQL",
				"EngineVersion": "5.6.37",
				"DBInstanceClass": "db.t2.medium",
				"MultiAZ": "false",
				"DBInstanceIdentifier": "csye6225-spring2018",
				"MasterUsername": "csye6225master",
				"MasterUserPassword": "csye6225password",
				"DBSubnetGroupName": {
					"Ref": "DBSubnetGroup"
				},
				"VPCSecurityGroups": [{
					"Ref": "DBPolicy"
				}],
				"PubliclyAccessible": "false",
				"Tags": [{
					"Key": "Name",
					"Value": "csye6225"
				}],
				"AllocatedStorage": "10"
			}
		},
		"MySNSTopic": {
			"Type": "AWS::SNS::Topic",
			"Properties": {
				"Subscription": [{
					"Endpoint": {
						"Ref": "awslambdaservice"
					},
					"Protocol": "lambda"
				}],
				"TopicName": "password_reset"
			}
		}

	},
	"Parameters": {
		"InstanceName": {
			"Type": "String"
		},
		"SubnetId": {
			"Type": "String"
		},
		"WebPolicy": {
			"Type": "String"
		},
		"DBPolicy": {
			"Type": "String"
		},
		"DBSubnetGroup": {
			"Type": "String"
		},
		"awslambdaservice": {
			"Type": "String"
		}
	}
}
